% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OrderShapeEM.R
\name{OrderShapeEM}
\alias{OrderShapeEM}
\title{False discovery rate control using auxiliary (order) information}
\usage{
OrderShapeEM(pvals, order.var, control = OrderShapeEM.control())
}
\arguments{
\item{pvals}{a numeric vector of the p-values.}

\item{order.var}{a numeric vector of covariate values reflective of the order of the prior null probability of the hypotheses.}

\item{control}{a list of control arguments for the EM algorithm
\itemize{
\item{maxIter}{an integer value indicating the maximum number of iterations.}
\item{tol}{a numeric value giving the tolerance in the relative change in the log likelihood below which the algorithm is considered to be converged.}
\item{trace}{a logical value indicating whether to print out the EM process.}
\item{pi0.init, k.init}{two scalars giving the initial estimates of pi0 and f1. f1 is approximated by a beta distribution with the shape parameter k. 
Default are 0.95 and 0.75 for \code{pi0.init}, \code{k.init}, respectively.}
\item{pvals.cutoff}{a numeric value to replace p-values below that value, which is used to increase the stability of the algorithm.}
}}
}
\value{
A list with the elements
\item{call}{the call made.}
\item{pi0.unadj}{a numeric vector of the estimated null probabilities before calibration.}
\item{pi0}{a numeric vector of the estimated null probabilities after calibration.}
\item{lfdr}{a numeric vector of the local fdrs.}
\item{fdr}{a numeric vector of the adjusted p-values.}
\item{f1}{a vector of the estimated densities for the p-value under the alternative.}
\item{pi0.step}{an object of class \code{stepfun} for the pi0.}
\item{f1.step}{an object of class \code{stepfun} for the f1.}
\item{convergence}{a list containing the convergence information. \code{code}: 1 - converged, 0 - not converged;
\code{iter}: the number of iterations performed.}
\item{loglik}{a numeric value for the log likelihood.}
}
\description{
The function implements a scalable and tuning parameter-free FDR control procedure for large-scale multiple testing exploiting
the auxiliary information that reflects the order of the prior null probability. Both the prior null probabilities and the alternative
p-value distribution are estimated using isotonic regression (pool-adjacent-violators algorithm).
}
\examples{

set.seed(123)
data.obj <- SimulateData(prior.strength = 'Moderate', sig.density = 'Low', sig.strength = 'Weak',
feature.no = 5000)
orderfdr.obj <- OrderShapeEM(data.obj$pvalue, data.obj$prior, OrderShapeEM.control(trace = TRUE))

# Plot the estimated pi0 and f1
par(mfrow = c(1, 2))
plot(orderfdr.obj$pi0.step, xlab = 'index', ylab = 'pi0', do.points = FALSE,
	xlim = c(1, length(data.obj$pvalue)), main = 'Null probability')
plot(orderfdr.obj$f1.step, xlab = 'p value', ylab = 'f1', do.points = FALSE, 
	xlim = c(min(data.obj$pvalue), 1), log = 'x', main = 'Alternative distribution')

# Calculate the number of true positives and the false discovery proportion
sum(orderfdr.obj$fdr <= 0.05 & data.obj$truth)
sum(orderfdr.obj$fdr <= 0.05 & !data.obj$truth) / max(sum(orderfdr.obj$fdr <= 0.05), 1)

# Compare to the BH procedure
sum(p.adjust(data.obj$p.value, 'fdr') <= 0.05 & data.obj$truth)
sum(p.adjust(data.obj$p.value, 'fdr') <= 0.05 & !data.obj$truth) / 
max(sum(p.adjust(data.obj$p.value, 'fdr') <= 0.05), 1)

}
\references{
Hongyuan Cao, Jun Chen, Xianyang Zhang. Optimal false discovery rate control for large-scale multiple testing with
 auxiliary information. Submitted.
}
\author{
Jun Chen
}
\keyword{FDR}
